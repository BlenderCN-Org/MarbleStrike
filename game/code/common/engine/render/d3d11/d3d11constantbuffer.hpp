#if defined( RENDER_PLAT_D3D11 )

#ifndef D3D11_CONSTANT_BUFFER_HPP
#define D3D11_CONSTANT_BUFFER_HPP

//////////////////////////////////////////////////////
// INCLUDES
//////////////////////////////////////////////////////

#include "common/engine/render/constantbuffer.hpp"
#include <d3d11.h>

//////////////////////////////////////////////////////
// DEFINES
//////////////////////////////////////////////////////

//////////////////////////////////////////////////////
// CONSTANTS
//////////////////////////////////////////////////////

//////////////////////////////////////////////////////
// ENUMS
//////////////////////////////////////////////////////

//////////////////////////////////////////////////////
// FORWARD DECLARATIONS
//////////////////////////////////////////////////////

class RenderStateShadowing;

//////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////

class D3D11ConstantBuffer : public ConstantBuffer
{

public:
	D3D11ConstantBuffer( ConstantBuffer::ConstantBufferType type );
	~D3D11ConstantBuffer();

	void SetConstantBufferData( void* data, int size );
		
	void SetVectorParameter( const char* name, Math::Vector4* data, int index = 0 );
	void SetMatrixParameter( const char* name, Math::Matrix44* data, int index = 0 );	
	
	void Dispatch( 
		RenderStateShadowing* renderStateShadowing, 
		EffectPass* effectPass,
		void* context
		);
	
private:

	ID3D11Buffer* mD3D11Buffer;

};

#endif

#endif