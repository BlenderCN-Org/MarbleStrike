//--------------------------------------------------------------------------------------
// GLOBAL VARIABLES
//--------------------------------------------------------------------------------------
float4 gDownSampleOffsets[9];
Texture2D gTexture;
SamplerState gTextureState;

//--------------------------------------------------------------------------------------
// STRUCTURES
//--------------------------------------------------------------------------------------
struct PS_INPUT
{
    float4 Position : SV_POSITION;
    float2 TexCoord : TEXCOORD0;
};

struct PS_OUTPUT
{
    float4 RGBColor : SV_TARGET;
};

//--------------------------------------------------------------------------------------
// PIXEL SHADER
//--------------------------------------------------------------------------------------

PS_OUTPUT PSMain( PS_INPUT In )
{ 
    PS_OUTPUT output;
	
    // Compute the average of the 10 necessary samples
    float4 color = 0.0f;
    float maximum = -1e20;
    float average = 0.0f;
        
    for( int i = 0; i < 9; i++ )
    {
        color = gTexture.Sample( gTextureState, In.TexCoord + gDownSampleOffsets[i].xy );
        average += color.r;
        maximum = max( maximum, color.g );
    }
        
    // We've just taken 9 samples from the
    // high resolution texture, so compute the
    // actual average that is written to the
    // lower resolution texture (render target).
    average /= 9.0f;
        
    // Return the new average luminance
    output.RGBColor = float4( average, maximum, 0.0f, 1.0f ); 
        
    return output;  
}